if &compatible
  set nocompatible
end

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin mangagement. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'easymotion/vim-easymotion'
Plug 'christoomey/vim-run-interactive'
Plug 'kchmck/vim-coffee-script'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'pbrisbin/vim-mkdir'
Plug 'scrooloose/syntastic'
Plug 'slim-template/vim-slim'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'
" NERDTree... tree explorer for vim
Plug 'scrooloose/nerdtree'
" Better markdown editing
Plug 'gabrielelana/vim-markdown'
" Multiple cursor emulation (a la Sublime Text) using ctrl-n
Plug 'terryma/vim-multiple-cursors' 
" asynchronous build and test dispatcher https://vimeo.com/63116209
Plug 'tpope/vim-dispatch'
" Emmet, nuff said.
Plug 'mattn/emmet-vim' 
" highlights all search results and allows tabbing between them
Plug 'haya14busa/incsearch.vim' 
" syntax highlighting for rspec
Plug 'keith/rspec.vim' 
" show the class structure in a tree (using ctags)
Plug 'majutsushi/tagbar'
" auto sorts ascii tables and aligns code neatly
Plug 'godlygeek/tabular'
" easily convert ruby blocks to single line block/multiline block
Plug 'jgdavey/vim-blockle'
" Vim snippets ...
Plug 'honza/vim-snippets'
" Visual git gutter
Plug 'airblade/vim-gitgutter'
" vim slime for tmux integration
Plug 'jpalardy/vim-slime'
" vim rake by Tim Pope - like rails.vim but for plain ruby
Plug 'tpope/vim-rake'
" vim projectionist required by vim rake
Plug 'tpope/vim-projectionist'
" vim cucumber for easy cuke navigation
Plug 'tpope/vim-cucumber'
" gutter coverage report for ruby using simplecov
Plug 'killphi/vim-legend'
" .tmux.conf syntax highlighting
Plug 'keith/tmux.vim'
" get docs for command under cursor (with Dash or web)
Plug 'keith/investigate.vim'
" show trailing white spaces and allow deleting them
Plug 'ntpeters/vim-better-whitespace'
" modern snippets for vim
Plug 'SirVer/ultisnips'
" The Silver Searcher (Ag) vim integration
Plug 'rking/ag.vim'
" vim unimpaired fixes daily annoyences see docs for more info
Plug 'tpope/vim-unimpaired'
" JavaScript support (required by vim-jsx)
Plug 'pangloss/vim-javascript'
" JSX support for react components
Plug 'mxw/vim-jsx'
" seamless tmux/vim pane navigation
Plug 'christoomey/vim-tmux-navigator'

" Plug 'scrooloose/nerdcommenter' " not sure if I need this yet

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
