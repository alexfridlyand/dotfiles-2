if &compatible
  set nocompatible
end

call plug#begin('~/.vim/bundle')

" List Plugins =====================================
" coffee script highlighting
Plug 'kchmck/vim-coffee-script', { 'for': 'coffee' }

Plug 'scrooloose/syntastic'
" Plug 'neomake/neomake'

" do rspec things and highlight syntax
Plug 'thoughtbot/vim-rspec'

" interact with ruby bundler gem
Plug 'tpope/vim-bundler', { 'for': ['ruby', 'rspec'] }

" add `end` automatically when creating a new method in ruby
Plug 'tpope/vim-endwise', { 'for': ['ruby', 'rspec', 'elixir'] }

" vim rake by Tim Pope - like rails.vim but for plain ruby
Plug 'tpope/vim-rake', { 'for': ['ruby', 'rspec'] }

" support for ruby
Plug 'vim-ruby/vim-ruby', { 'for': ['ruby', 'rspec']}

" vim cucumber for easy cuke navigation
Plug 'tpope/vim-cucumber', { 'for': ['gherkin', 'ruby'] }

" syntax highlighting for rspec
Plug 'keith/rspec.vim', { 'for': 'rspec' }

" show code coverage in vim
Plug 'killphi/vim-legend', { 'for': 'ruby' }

" " vim rubocop
" Plug 'ngmy/vim-rubocop', { 'for': ['ruby', 'rspec']}

" Rails and ruby support (loaded automatically for rails apps)
Plug 'tpope/vim-rails'

" Vim sugar for the UNIX shell commands that need it the most.
Plug 'tpope/vim-eunuch'

" git awesomeness
Plug 'tpope/vim-fugitive'


" allow (non-native) plugins to use the . command
Plug 'tpope/vim-repeat'

" Surround text with closures
Plug 'tpope/vim-surround'

" vim projectionist allows creating :Esomething custom shortcuts (required by vim rake)
Plug 'tpope/vim-projectionist'

" vim unimpaired fixes daily annoyences
Plug 'tpope/vim-unimpaired'

" abolish.vim: easily search for, substitute, and abbreviate multiple variants
" of a word
Plug 'tpope/vim-abolish'

" Support emacs keybindings in insert mode
Plug 'tpope/vim-rsi'

" Clojure REPL in Vim
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" save vim sessions
Plug 'tpope/vim-obsession'

" Comment out code easily
Plug 'vim-scripts/tComment'

" NERDTree... tree explorer for vim
Plug 'scrooloose/nerdtree'

" Multiple cursor emulation (a la Sublime Text) using ctrl-n
Plug 'terryma/vim-multiple-cursors'

" Sublime text like search results
Plug 'dyng/ctrlsf.vim'

" Emmet generate html tags, autocomplete css
Plug 'mattn/emmet-vim'

" highlights all search results and allows tabbing between them
Plug 'haya14busa/incsearch.vim'

" auto sorts ascii tables and aligns code neatly
Plug 'godlygeek/tabular'

" vim snippets ...
Plug 'honza/vim-snippets'

" Visual git gutter
Plug 'airblade/vim-gitgutter'

" vim slime for tmux integration
Plug 'jpalardy/vim-slime'

" .tmux.conf syntax highlighting
Plug 'keith/tmux.vim'

" even better tmux plugin
Plug 'tmux-plugins/vim-tmux'

" get docs for command under cursor (with Dash or web)
Plug 'keith/investigate.vim'

" show trailing white spaces and allow deleting them
Plug 'ntpeters/vim-better-whitespace'

" modern snippets for vim
Plug 'SirVer/ultisnips'

" The Silver Searcher (Ag) vim integration
Plug 'mileszs/ack.vim'

" JavaScript support (required by vim-jsx)
Plug 'pangloss/vim-javascript'

" JSX support for react components
Plug 'mxw/vim-jsx'

" seamless tmux/vim pane navigation
Plug 'christoomey/vim-tmux-navigator'

" run commands from vim in tmux
Plug 'christoomey/vim-tmux-runner'

" Indentation guide
Plug 'nathanaelkane/vim-indent-guides'

" quick buffer switching
Plug 'jlanzarotta/bufexplorer'

" JSON manipulation
Plug 'tpope/vim-jdaddy', { 'for': 'json' }

" elm editing and compilation in vim
Plug 'ElmCast/elm-vim'

" vim color schemes
Plug 'flazz/vim-colorschemes', { 'on': 'Colors' }

" highlight colors in css
Plug 'ap/vim-css-color', { 'for': ['css', 'scss', 'sass'] }

" syntax for apple scripts
Plug 'vim-scripts/applescript.vim'

" Create custom text objects (required by vim textobj rubyblock)
Plug 'kana/vim-textobj-user'

" Text object for ruby blocks
Plug 'nelstrom/vim-textobj-rubyblock'

" Vim Go
Plug 'fatih/vim-go', { 'for': 'go' }

" SpaceGray theme
Plug 'ajh17/Spacegray.vim', { 'on': 'Colors' }

" Dracula theme
Plug 'dracula/vim', { 'as': 'dracula' }

" Seoul theme
Plug 'junegunn/seoul256.vim'

" tab completion (autocomplete) for insert
Plug 'ervandew/supertab'


" Jekyll blog commands
Plug 'parkr/vim-jekyll'

" Gitv - for browsing a file's history in git
Plug 'gregsexton/gitv'

" A better Gitv:
Plug 'junegunn/gv.vim'

" Vim Web API (required by gist-vim)
Plug 'mattn/webapi-vim'

" Vim GitHub gist integration
Plug 'mattn/gist-vim'

" Gundo - visualize git's undo tree (requires python)
Plug 'sjl/gundo.vim'

" Hashrocket keybinding
Plug 'hashrocket/vim-hashrocket'

" Convert code to multiline
Plug 'AndrewRadev/splitjoin.vim'

" Toggle between different language verbs or syntax styles
Plug 'AndrewRadev/switch.vim'

" Interact with web apis (required by postal)
Plug 'mattn/webapi-vim'

" vim plugin for writing vim plugins
Plug 'tpope/vim-scriptease'


" fancy vim start page
Plug 'mhinz/vim-startify'

" copy code as rtf
Plug 'zerowidth/vim-copy-as-rtf'

" postgres sql highlighting
Plug 'exu/pgsql.vim'

" distraction free writing (like iA Writer)
Plug 'laktek/distraction-free-writing-vim'

" Elixir support
Plug 'elixir-lang/vim-elixir'

" Elixir support like rails.vim
Plug 'avdgaag/vim-phoenix'

" Alchemist for extended elixir support
Plug 'slashmili/alchemist.vim'

" Rust support
Plug 'rust-lang/rust.vim', { 'for': 'rust' }

" fzf greatness (fuzzy finding)
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
Plug 'junegunn/fzf.vim'

" when fzf is not available (gvim) use Command - T
Plug 'wincent/command-t', {
      \   'do': 'cd ruby/command-t && ruby extconf.rb && make'
      \ }

" Distraction free writing in vim
Plug 'junegunn/goyo.vim', { 'on': 'Goyo' }

" Highlight current paragraph (works well with goyo)
Plug 'junegunn/limelight.vim', { 'on': 'Limelight' }

" Browse github
Plug 'junegunn/vim-github-dashboard', { 'on': ['GHDashboard', 'GHActivity'] }

" peek at registers and macros before running them
Plug 'junegunn/vim-peekaboo'

" Vim plugin for Flow (js static type checker)
Plug 'flowtype/vim-flow', { 'for': ['javascript', 'javascript-jsx'] }

" Scratch buffers
Plug 'mtth/scratch.vim'

" Auto close matching pairs {} "", etc..
Plug 'jiangmiao/auto-pairs'

" Airline - like powerline but light as air
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" One Dark (atom colorscheme)
Plug 'joshdick/onedark.vim'

" faster scrolling
Plug 'yonchu/accelerated-smooth-scroll'

" OWN PLUGINS: --------------------------- {{{
" automatic bulleted lists
Plug 'dkarter/bullets.vim'
" /OWN PLUGINS --------------------------- }}}

" ==================================================

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
