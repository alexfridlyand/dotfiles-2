call plug#begin('~/.vim/bundle')

" List Plugins =====================================

" Dependencies:
  " Create custom text objects (required by rubyblock,xmlattr)
  Plug 'kana/vim-textobj-user'

" Elixir:
  " Elixir support
  Plug 'elixir-lang/vim-elixir'

  " pulls info on hex packages (requires mattn/webapi-vim)
  Plug 'lucidstack/hex.vim'

  " Alchemist for extended elixir support
  Plug 'slashmili/alchemist.vim'

  " shortcuts for the Phoenix framework
  Plug 'c-brenn/phoenix.vim'

" coffee script highlighting
Plug 'kchmck/vim-coffee-script', { 'for': 'coffee' }

" staticly check code and highlight errors (async syntastic replacement)
Plug 'neomake/neomake'

" Ruby:
  " do rspec things and highlight syntax
  Plug 'thoughtbot/vim-rspec'

  " get gem info and insert latest gem version into Gemfile
  Plug 'alexbel/vim-rubygems'

  " interact with ruby bundler gem
  Plug 'tpope/vim-bundler', { 'for': ['ruby', 'rspec'] }

  " vim rake by Tim Pope - like rails.vim but for plain ruby
  Plug 'tpope/vim-rake', { 'for': ['ruby', 'rspec'] }

  " support for ruby
  Plug 'vim-ruby/vim-ruby', { 'for': ['ruby', 'rspec']}

  " vim cucumber for easy cuke navigation
  Plug 'tpope/vim-cucumber', { 'for': ['gherkin', 'ruby'] }

  " syntax highlighting for rspec
  Plug 'keith/rspec.vim' ", { 'for': 'rspec' }

  " show code coverage in vim
  Plug 'killphi/vim-legend', { 'for': 'ruby' }

  " Rails and ruby support (loaded automatically for rails apps)
  Plug 'tpope/vim-rails'


  " Text object for ruby blocks
  Plug 'nelstrom/vim-textobj-rubyblock'

" add `end` automatically when creating a closure in many languages
Plug 'tpope/vim-endwise'

" Terraform:
  " terraform syntax
  Plug 'hashivim/vim-terraform'

" Ansible:
  " ansible vim plugin
  Plug 'pearofducks/ansible-vim'

 " Caddy:
  " syntax highlighting for caddyfile
  Plug 'isobit/vim-caddyfile'

" WebAssembly:
  " Syntax Highlighting:
  Plug 'rhysd/vim-wasm'

" Vim sugar for the UNIX shell commands that need it the most.
Plug 'tpope/vim-eunuch'

" git awesomeness
Plug 'tpope/vim-fugitive'

" allow (non-native) plugins to use the . command
Plug 'tpope/vim-repeat'

" Surround text with closures
Plug 'tpope/vim-surround'

" vim projectionist allows creating :Esomething custom shortcuts (required by vim rake)
Plug 'tpope/vim-projectionist'

" vim unimpaired fixes daily annoyences
Plug 'tpope/vim-unimpaired'

" abolish.vim: easily search for, substitute, and abbreviate multiple variants
" of a word
Plug 'tpope/vim-abolish'

" Support emacs keybindings in insert mode
Plug 'tpope/vim-rsi'

" Clojure REPL in Vim
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" save vim sessions
Plug 'tpope/vim-obsession'

" session management
" Plug 'wting/gitsessions.vim'

" " Comment out code easily
" Plug 'vim-scripts/tComment'
"Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-commentary'

" NERDTree... tree explorer for vim
Plug 'scrooloose/nerdtree'

" auto-generate ctags on save
Plug 'ludovicchabant/vim-gutentags'

" Multiple cursor emulation (a la Sublime Text) using ctrl-n
Plug 'terryma/vim-multiple-cursors'

" HTML:
  " Emmet: generates html tags, autocomplete css
  Plug 'mattn/emmet-vim'

  " RagTag: Auto-close html tags + mappings for template scripting languages
  Plug 'tpope/vim-ragtag'

  " add text object for HTML attributes
  Plug 'whatyouhide/vim-textobj-xmlattr'

" Searching:
  " highlights all search results and allows tabbing between them
  Plug 'haya14busa/incsearch.vim'

  " Sublime text like search results
  Plug 'dyng/ctrlsf.vim'


" Align Code:
  " auto sorts ascii tables and aligns code neatly
  Plug 'godlygeek/tabular'

  " same as tabular but by Junegunn
  Plug 'junegunn/vim-easy-align'

" Visual git gutter
Plug 'airblade/vim-gitgutter'


" TMUX:
  " .tmux.conf syntax highlighting
  Plug 'keith/tmux.vim'

  " tmux config file stuff
  Plug 'tmux-plugins/vim-tmux'

  " vim slime for tmux integration (C-c, C-c to send selction to tmux)
  Plug 'jpalardy/vim-slime'

  " seamless tmux/vim pane navigation
  Plug 'christoomey/vim-tmux-navigator'

  " run commands from vim in tmux
  Plug 'christoomey/vim-tmux-runner'

  " yet another tmux plugin
  Plug 'benmills/vimux'

  " Vimux Related:
    " Run Golang tests in vimux
    Plug 'benmills/vimux-golang'

    " Run elixir mix tests in vimux
    Plug 'spiegela/vimix'

    " Run ruby and elixir tests
    Plug 'jgdavey/vim-turbux'


" get docs for command under cursor (with Dash or web)
Plug 'keith/investigate.vim'

" show trailing white spaces and allow deleting them
Plug 'ntpeters/vim-better-whitespace'

" Snippets:
  " ES2015 code snippets (Optional)
  Plug 'epilande/vim-es2015-snippets'

  " React code snippets
  Plug 'epilande/vim-react-snippets'

  " modern snippets for vim
  Plug 'SirVer/ultisnips'

  " vim snippets for UltiSnips ...
  Plug 'honza/vim-snippets'

" Ack vim integration
Plug 'mileszs/ack.vim'

" JavaScript:
  " JavaScript support (required by vim-jsx)
  Plug 'pangloss/vim-javascript'

  " JSX support for react components
  Plug 'mxw/vim-jsx'

  " Automatically import js modules
  Plug 'Galooshi/vim-import-js'

  " Vim plugin for Flow (js static type checker)
  Plug 'flowtype/vim-flow', { 'for': ['javascript', 'javascript-jsx'] }

  " JSON manipulation
  Plug 'tpope/vim-jdaddy', { 'for': 'json' }

" Vim Buffer Manipulation:

  " Wipe and delete buffers
  Plug 'jbranchaud/vim-bdubs'

  " quick buffer switching
  Plug 'jlanzarotta/bufexplorer'

" Elm:
  " elm editing and compilation in vim
  Plug 'ElmCast/elm-vim'

" Indent lines (visual indication)
Plug 'Yggdroot/indentLine'

" ColorSchemes:
  " gruvbox theme
  Plug 'morhetz/gruvbox'

  " Seoul 256 by Junegunn
  " Plug 'junegunn/seoul256.vim'

  " Dracula theme
  Plug 'dracula/vim', { 'as': 'dracula' }

" highlight colors in css
Plug 'ap/vim-css-color', { 'for': ['css', 'scss', 'sass'] }

" syntax for apple scripts
Plug 'vim-scripts/applescript.vim'


" Swift support
Plug 'keith/swift.vim', { 'for': 'swift' }

" Vim Go
Plug 'fatih/vim-go', { 'for': 'go' }

" highlight open and close tabs
Plug 'valloric/matchtagalways'

" Autocomplete:
  " tab completion (autocomplete) for insert
  Plug 'ervandew/supertab'

  " autocomplete using text from tmux
  Plug 'wellle/tmux-complete.vim'

" Jekyll blog commands
Plug 'parkr/vim-jekyll'

" Gitv - for browsing a file's history in git
Plug 'gregsexton/gitv'

" A better Gitv:
Plug 'junegunn/gv.vim'

" Integration testing for vim plugins
Plug 'junegunn/vader.vim'

" Vim Web API (required by gist-vim)
Plug 'mattn/webapi-vim'

" Vim GitHub gist integration
Plug 'mattn/gist-vim'

" Improve in buffer search
" Plug 'junegunn/vim-slash'

" Gundo - visualize git's undo tree (requires python)
Plug 'sjl/gundo.vim'

" Hashrocket keybindings and more
Plug 'hashrocket/vim-hashrocket'

" Convert code to multiline
Plug 'AndrewRadev/splitjoin.vim'

" Toggle between different language verbs or syntax styles
Plug 'AndrewRadev/switch.vim'

" Interact with web apis (required by postal)
Plug 'mattn/webapi-vim'

" vim plugin for writing vim plugins
Plug 'tpope/vim-scriptease'

" fancy vim start page
Plug 'mhinz/vim-startify'

" copy code as rtf
Plug 'zerowidth/vim-copy-as-rtf'

" Postgres:
  " postgres sql highlighting
  Plug 'exu/pgsql.vim'

  " show table description in vim
  Plug 'hashrocket/vim-hr-psql'

" Writing:
  " distraction free writing (like iA Writer)
  Plug 'laktek/distraction-free-writing-vim'

  " Distraction free writing in vim
  Plug 'junegunn/goyo.vim', { 'on': 'Goyo' }

  " Highlight current paragraph (works well with goyo)
  Plug 'junegunn/limelight.vim', { 'on': 'Limelight' }

" Rust support
Plug 'rust-lang/rust.vim', { 'for': 'rust' }

" fzf greatness (fuzzy finding)
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
Plug 'junegunn/fzf.vim'

" Browse github
Plug 'junegunn/vim-github-dashboard', { 'on': ['GHDashboard', 'GHActivity'] }

" peek at registers and macros before running them
Plug 'junegunn/vim-peekaboo'

" Scratch buffers
Plug 'mtth/scratch.vim'

" Auto close matching pairs {} \"\", etc..
Plug 'jiangmiao/auto-pairs'

" Airline - like powerline but light as air
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Auto format code
Plug 'sbdchd/neoformat'

" OWN PLUGINS: --------------------------- {{{
" automatic bulleted lists
Plug 'dkarter/bullets.vim'

" snip helpers - assorted functions for snippets
Plug 'dkarter/sniphelpers.vim'
" /OWN PLUGINS --------------------------- }}}

" ==================================================

if filereadable(expand('~/.vimrc.bundles.local'))
  source ~/.vimrc.bundles.local
endif

call plug#end()
